{"version":3,"sources":["components/BlogPostLayout.module.css","components/Pagination.module.css","components/BlogIndexPage.module.css","service/ThemeService.ts","utils/formats.ts","components/ArticleMeta.tsx","components/ArticleMeta.module.css","siteMetadata.ts","components/Bio.tsx","utils/getGravatarURL.ts","components/Pagination.tsx","components/BlogIndexPage.tsx","components/NotFoundPage.tsx","components/LoadingIndicator.tsx","components/BlogLayout.tsx","components/ArticleToc.tsx","components/BlogPostLayout.tsx","routes/posts/index.ts","routes/index.tsx","components/LoadingIndicator.module.css","components/BlogLayout.module.css","components/ArticleSummary.tsx","components/ArticleSummary.module.css","components/Bio.module.css","components/ArticleToc.module.css","serviceWorker.ts","AnalyticsWrap.tsx","index.tsx"],"names":["module","exports","title","header","footer","bio","links","next","content","Pagination","previous","themeButton","articlesList","ThemeService","theme","this","getTheme","document","body","setAttribute","localStorage","setItem","getItem","__webpack_exports__","months","ArticleMeta","_ref","readingTimeElement","blogRoot","data","readingTime","minutes","Math","max","round","cups","react_default","a","createElement","Fragment","className","styles","Array","fill","join","dateTime","date","toUTCString","dateString","Date","monthName","getMonth","dayOfMonth","getDate","fourDigitYear","getFullYear","concat","formatDate","tags","length","map","tag","key","es","href","siteMetadata","author","description","indexPageSize","Bio","props","photoURL","email","size","_ref$defaultURL","defaultURL","hash","md5","toLowerCase","trim","encodeURIComponent","getGravatarURL","src","alt","pageCount","pageNumber","dist_es","String","pages","current","count","BlogIndexPage","postRoutes","style","boxShadow","onClick","getAttribute","setTheme","components_Bio","route","url","ArticleSummary","components_Pagination","target","float","NotFoundPage","NotFound","LoadingIndicator","active","BlogLayout","isViewingIndex","loadingRoute","useLoadingRoute","container","components_LoadingIndicator","render","components_NotFoundPage","ArticleToc","toc","tableOfContents","blockquote","TocItem","item","index","id","data-key","children","BlogPostLayout","_useCurrentRoute","useCurrentRoute","_ref2","useView","connect","head","MDXComponent","disqusConfig","pathname","identifier","slug","index_es","components","Link","wrapper","_ref3","components_ArticleToc","lib_default","DiscussionEmbed","shortname","config","previousDetails","marginBottom","nextDetails","postModules","./2000-01-05-welcome/post.ts","__webpack_require__","e","then","bind","./2015/07-04-centos6-vps-wordpress/post.ts","./2015/07-05-wordpress-ip-site-to-www/post.ts","./2015/07-07-vagrant-experience/post.ts","./2015/07-08-docker-on-windows-experience/post.ts","./2015/07-29-time-and-space/post.ts","./2016/03-10-I've-never-been-to-me/post.ts","./2016/08-28-angular-component-ui-router/post.ts","./2016/11-16-raspberrypi-realvnc/post.ts","./2016/11-17-hello-hugo-and-more/post.ts","./2016/11-19-hello-kcp/post.ts","./2016/11-23-python-pyenv/post.ts","./2016/11-29-chcp-utf8/post.ts","./2016/11-29-proxychains-ng-ipv6-error/post.ts","./2016/11-29-python-conda/post.ts","./2016/12-01-win10-remove-uninstalled-app-from-notification-list/post.ts","./2016/12-07-about-wsl/post.ts","./2017/03-15-ios-writing-test/post.ts","./2017/03-19-markdown-image-tool-picorz/post.ts","./2017/03-22-spring-boot-livereload/post.ts","./2017/09-14-find-my-lost-heart/post.ts","./2018/04-09-js-css-text-overflow/post.ts","./2018/07-10-font-load/post.ts","./2019/02/01-cra-ts/post.ts","./2019/02/03-defining-component-apis-in-react/post.ts","./2019/02/12-react-play-with-styled-theming/post.ts","./2019/02/13-fira-code-font-setup/post.ts","./2019/02/15-git-subtree/post.ts","./2019/07/29-start-loving-change/post.ts","./2019/12/11-cra-polyfill/post.ts","./2019/12/29-disqus-addon/post.ts","./2019/12/29-velop-rewired/post.ts","./2020/06/30-how-to-build-screen-projection-app-with-WebRTC/post.ts","./2020/06/30-用hygen代码生成器优化效率/post.ts","./2020/07/08-theme-switch/post.ts","./2020/08/28-HTTP-headers/post.ts","./2020/08/28-performance-optimize-rethink/post.ts","./2020/09/04-tab-communication-topic/post.ts","./2020/09/05-omni-automation/post.ts","./2020/09/22-2200-多巴胺vs内啡肽/post.ts","./2020/09/22-2236-Why-does-academic-qualification-depreciate/post.ts","./2020/09/22-2332-react-fc/post.ts","./2020/09/23-0034-the-most-successful-developers-share-more-than-they-take/post.ts","./2020/09/23-1825-design-principles-of-software-development/post.ts","./2020/09/26-0126-Preparing-for-a-Tech-Talk/post.ts","./2020/09/26-1736-better-creating/post.ts","./2020/10/17-2313-official-project-review/post.ts","./2020/11/07-2114-how-to-debug-react-without-pain/post.ts","./2020/12/03-2102-General-Principles-of-software-development/post.ts","./2020/12/03-2230-Management-Principles-of-software-development/post.ts","./2020/12/03-2335-Coding-Principles-of-software-development/post.ts","./2020/12/04-0007-Evolution-principles-of-software-development/post.ts","./2020/12/04-0023-Testing-Principles-of-software-development/post.ts","./2020/12/07-2322-official-website-project-review2/post.ts","./2020/12/08-0152-official-website-project-review-part3/post.ts","importPost","postPathnames","Object","keys","datePattern","postDetails","slugify","replace","dateMatch","match","parseInt","posts","sortBy","reverse","i","getPage","Navi","asyncToGenerator","regenerator_default","mark","_callee2","post","getContent","meta","previousSlug","previousPost","nextSlug","nextPost","previousPostDetails","nextPostDetails","wrap","_context2","prev","sent","default","objectWithoutProperties","abrupt","getData","req","context","objectSpread","getView","_getView","_callee","_ref4","other","_context","stop","apply","arguments","chunks","chunk","chunkPagePairs","pageTitle","method","Promise","all","resolve","routes","_x3","components_BlogIndexPage","_x","_x2","compose","withContext","mountpath","withView","path","test","components_BlogLayout","mount","/","shift","/page","/1","redirect","fromPairs","/posts","components_BlogPostLayout","/tags","lazy","/about","/rss","LoadingIndicator-animation","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_navi__WEBPACK_IMPORTED_MODULE_1__","_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default","spoiler","Boolean","window","location","hostname","insertScript","hm","s","getElementsByTagName","parentNode","insertBefore","AnalyticsWrap","gtag","dataLayer","push","addGoogle","console","log","register","main","_main","navigation","syncTheme","createBrowserNavigation","getRoute","process","renderer","ReactDOM","hydrate","react_navi_helmet_async_dist_es","src_AnalyticsWrap","hashScrollBehavior","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.721df6a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogPostLayout_title__2L_2_\",\"header\":\"BlogPostLayout_header__1Ny4T\",\"footer\":\"BlogPostLayout_footer__3ofxa\",\"bio\":\"BlogPostLayout_bio__diNn9\",\"links\":\"BlogPostLayout_links__-LX2X\",\"next\":\"BlogPostLayout_next__KrMHx\",\"content\":\"BlogPostLayout_content__1mzTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__2Xt2h\",\"previous\":\"Pagination_previous__1akUm\",\"next\":\"Pagination_next__7Ba4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogIndexPage_title__341hM\",\"themeButton\":\"BlogIndexPage_themeButton__1pxGL\",\"articlesList\":\"BlogIndexPage_articlesList__1V39R\",\"footer\":\"BlogIndexPage_footer__1vkZQ\"};","class ThemeService {\n    syncTheme() {\n        const theme = this.getTheme();\n        document.body.setAttribute('class', theme);\n    }\n    setTheme(theme) {\n        localStorage.setItem('theme', theme);\n        document.body.setAttribute('class', theme);\n    }\n    getTheme() {\n        return localStorage.getItem('theme') || 'light';\n    }\n}\n\nexport default new ThemeService();\n","export let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nexport function formatDate(dateString) {\n  let date = new Date(dateString)\n  let monthName = months[date.getMonth()]\n  let dayOfMonth = date.getDate()\n  let fourDigitYear = date.getFullYear()\n\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`\n}","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport { formatDate } from '../utils/formats'\nimport styles from './ArticleMeta.module.css'\n\ninterface ArticleMetaProps {\n  blogRoot: string\n  data: any\n  readingTime?: any\n}\n\nfunction ArticleMeta({ blogRoot, data, readingTime }: ArticleMetaProps) {\n  let readingTimeElement\n  if (readingTime) {\n    let minutes = Math.max(Math.round(readingTime.minutes), 1)\n    let cups = Math.round(minutes / 5)\n    readingTimeElement = (\n      <React.Fragment>\n        {' '}\n        &bull;{' '}\n        <span className={styles.readingTime}>\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\n        </span>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <small className={styles.ArticleMeta}>\n      <time dateTime={data.date.toUTCString()}>{formatDate(data.date)}</time>\n      {data.tags && data.tags.length && (\n        <>\n          {' '}\n          &bull;{' '}\n          <ul className={styles.tags}>\n            {data.tags.map(tag => (\n              <li key={tag}>\n                <Link href={join(blogRoot, 'tags', tag)}>{tag}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      {readingTimeElement || null}\n    </small>\n  )\n}\n\nexport default ArticleMeta\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ArticleMeta_tags__1IJ9w\"};","export default {\n  // The blog's title as it appears in the layout header, and in the document\n  // <title> tag.\n  title: 'OverRainbow',\n\n  author: 'mzvast',\n  description:\n    \"If Nothing Changes, Nothing Is Going to Change\",\n\n  // The number of posts to a page on the site index.\n  indexPageSize: 10,\n}\n","import React from 'react'\nimport styles from './Bio.module.css'\nimport { getGravatarURL } from '../utils/getGravatarURL'\n\ninterface BioProps {\n  className?: string\n}\n\nfunction Bio(props: BioProps) {\n  let photoURL = getGravatarURL({\n    email: \"mzvast@gmail.com\",\n    size: 56,\n  })\n\n  return (\n    <div\n      className={`\n      ${styles.Bio}\n      ${props.className || ''}\n    `}>\n      <img src={photoURL} alt=\"Me\" />\n      <p>\n        Personal blog by <a href=\"https://twitter.com/mzvast/\">mzvast</a>.\n        <br />\n        If Nothing Changes, Nothing Is Going to Change\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import md5 from 'blueimp-md5'\n\ninterface GravatarOptions {\n  email: string,\n  size: number,\n  defaultURL?: string,\n}\n\nexport function getGravatarURL({ email, size, defaultURL = 'identicon' }: GravatarOptions) {\n  let hash = md5(email.toLowerCase().trim())\n  return `https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${encodeURIComponent(defaultURL)}`\n}\n","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './Pagination.module.css'\n\ninterface PaginationProps {\n  blogRoot: string\n  pageCount: number\n  pageNumber: number\n}\n\nfunction Pagination({ blogRoot, pageCount, pageNumber }: PaginationProps) {\n  return (\n    <small className={styles.Pagination}>\n      {pageNumber !== 1 && (\n        <Link\n          className={styles.previous}\n          href={join(blogRoot, 'page', String(pageNumber - 1))}>\n          ← Previous\n        </Link>\n      )}\n      <span className={styles.pages}>\n        {' '}\n        Page <span className={styles.current}>{pageNumber}</span>/\n        <span className={styles.count}>{pageCount}</span>{' '}\n      </span>\n      {pageNumber < pageCount && (\n        <Link\n          className={styles.next}\n          href={join(blogRoot, 'page', String(pageNumber + 1))}>\n          Next →\n        </Link>\n      )}\n    </small>\n  )\n}\n\nexport default Pagination\n","import {Route} from 'navi';\nimport React from 'react';\nimport {Link} from 'react-navi';\nimport siteMetadata from '../siteMetadata';\nimport ArticleSummary from './ArticleSummary';\nimport Bio from './Bio';\nimport Pagination from './Pagination';\nimport styles from './BlogIndexPage.module.css';\nimport ThemeService from '../service/ThemeService';\n\ninterface BlogIndexPageProps {\n    blogRoot: string;\n    pageCount: number;\n    pageNumber: number;\n    postRoutes: Route[];\n}\n\nfunction BlogIndexPage({\n    blogRoot,\n    pageCount,\n    pageNumber,\n    postRoutes\n}: BlogIndexPageProps) {\n    return (\n        <div>\n            <header>\n                <h1 className={styles.title}>\n                    <Link style={{boxShadow: 'none'}} href={blogRoot}>\n                        {siteMetadata.title}\n                    </Link>\n                    <button\n                        className={styles.themeButton}\n                        onClick={() => {\n                            let theme = document.body.getAttribute('class');\n                            if (theme === 'light') {\n                                theme = 'dark';\n                            } else {\n                                theme = 'light';\n                            }\n                            ThemeService.setTheme(theme);\n                        }}\n                    >\n                        switch theme\n                    </button>\n                </h1>\n                <Bio />\n            </header>\n            <ul className={styles.articlesList}>\n                {postRoutes.map((route) => (\n                    <li key={route.url.href}>\n                        <ArticleSummary blogRoot={blogRoot} route={route} />\n                    </li>\n                ))}\n            </ul>\n            {pageCount > 1 && (\n                <Pagination\n                    blogRoot={blogRoot}\n                    pageCount={pageCount}\n                    pageNumber={pageNumber}\n                />\n            )}\n            <footer className={styles.footer}>\n                <div>\n                    <a\n                        href=\"./rss.xml\"\n                        target=\"_blank\"\n                        style={{float: 'right'}}\n                    >\n                        RSS\n                    </a>\n                    <Link href=\"/about\">About</Link> &bull;{' '}\n                    <Link href=\"/tags\">Tags</Link> &bull;{' '}\n                    <Link href=\"https://github.com/mzvast/mzvast.github.io\">\n                        Source\n                    </Link>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default BlogIndexPage;\n","import React from 'react'\nimport styles from './NotFoundPage.module.css'\n\n// Note that create-react-navi-app will always show an error screen when this\n// is rendered. This is because the underlying react-scripts package shows\n// the error screen when a NotFoundError is thrown, even though it's caught\n// by <NotFoundBoundary>. To see the error rendered by this function,\n// you'll just need to close the error overlay with the \"x\" at the top right.\nfunction NotFoundPage() {\n  return (\n    <div className={styles.NotFound}>\n      <h1>404 - Not Found</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport styles from './LoadingIndicator.module.css'\n\ninterface LoadingIndicatorProps {\n  active?: boolean\n  className?: string\n  style?: React.CSSProperties\n}\n\nfunction LoadingIndicator({ active, className, style }: LoadingIndicatorProps) {\n  return (\n    <div\n      className={`\n        ${styles.LoadingIndicator}\n        ${active ? styles.active : ''}\n        ${className}\n      `}\n      style={style}\n    />\n  )\n}\n\nexport default LoadingIndicator\n","import React from 'react';\nimport {Link, NotFoundBoundary, View, useLoadingRoute} from 'react-navi';\nimport siteMetadata from '../siteMetadata';\nimport NotFoundPage from './NotFoundPage';\nimport LoadingIndicator from './LoadingIndicator';\nimport styles from './BlogLayout.module.css';\n\ninterface BlogLayoutProps {\n    blogRoot: string;\n    isViewingIndex: boolean;\n}\n\nfunction BlogLayout({blogRoot, isViewingIndex}: BlogLayoutProps) {\n    let loadingRoute = useLoadingRoute();\n    return (\n        <div className={styles.container}>\n            <LoadingIndicator active={!!loadingRoute} />\n\n            {\n                // Don't show the header on index pages, as it has a special\n                // header.\n                !isViewingIndex && (\n                    <header>\n                        <h3 className={styles.title}>\n                            <Link style={{boxShadow: 'none'}} href={blogRoot}>\n                                {siteMetadata.title}\n                            </Link>\n                        </h3>\n                    </header>\n                )\n            }\n\n            <main>\n                <NotFoundBoundary render={() => <NotFoundPage />}>\n                    <View />\n                </NotFoundBoundary>\n            </main>\n        </div>\n    );\n}\n\nexport default BlogLayout;\n","import React from 'react';\nimport {Link} from 'react-navi';\nimport styles from './ArticleToc.module.css';\n\nfunction TocItem(data) {\n    if (!data || (data instanceof Array && data.length === 0)) {\n        return null;\n    }\n    if (data instanceof Array) {\n        // console.log('data::data', data);\n        return (\n            <ul>\n                {data.map((item, index) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {TocItem(item)}\n                        </React.Fragment>\n                    );\n                })}\n            </ul>\n        );\n    }\n    return (\n        <>\n            <li key={data.id} data-key={data.id}>\n                <Link href={'#' + data.id}>{data.title}</Link>\n            </li>\n            {TocItem(data.children)}\n        </>\n    );\n}\n\nfunction ArticleToc({tableOfContents}) {\n    const toc = tableOfContents();\n    return (\n        <>\n            <blockquote className={styles.blockquote}>\n                <div>{TocItem(toc)}</div>\n            </blockquote>\n        </>\n    );\n}\n\nexport default ArticleToc;\n","import React from 'react';\nimport {Link, useCurrentRoute, useView} from 'react-navi';\nimport {MDXProvider} from '@mdx-js/react';\nimport siteMetadata from '../siteMetadata';\nimport ArticleMeta from './ArticleMeta';\nimport Bio from './Bio';\nimport styles from './BlogPostLayout.module.css';\nimport Disqus from 'disqus-react';\nimport ArticleToc from './ArticleToc';\n\ninterface BlogPostLayoutProps {\n    blogRoot: string;\n}\n\nfunction BlogPostLayout({blogRoot}: BlogPostLayoutProps) {\n    let {title, data, url} = useCurrentRoute();\n    let {connect, content, head} = useView()!;\n    let {MDXComponent, readingTime, tableOfContents} = content;\n    const disqusShortname = 'miaocode';\n    const disqusConfig: any = {\n        url: 'https://mzvast.github.io' + url.pathname,\n        identifier: data.slug,\n        title: title\n    };\n    // console.log('useCurrentRoute::content', content, tableOfContents());\n    // The content for posts is an MDX component, so we'll need\n    // to use <MDXProvider> to ensure that links are rendered\n    // with <Link>, and thus use pushState.\n    return connect(\n        <>\n            {head}\n            <article className={styles.container}>\n                <header className={styles.header}>\n                    <h1 className={styles.title}>\n                        <Link style={{boxShadow: 'none'}} href={url.pathname}>\n                            {title}\n                        </Link>\n                    </h1>\n                    <ArticleMeta\n                        blogRoot={blogRoot}\n                        data={data}\n                        readingTime={readingTime}\n                    />\n                </header>\n                <MDXProvider\n                    components={{\n                        a: Link,\n                        wrapper: ({children}) => (\n                            <div className={styles.content}>{children}</div>\n                        )\n                    }}\n                >\n                    <ArticleToc tableOfContents={tableOfContents} />\n                    <MDXComponent />\n                </MDXProvider>\n                {/* <Disqus.CommentCount shortname={disqusShortname} config={disqusConfig}>\n                    评论\n                </Disqus.CommentCount> */}\n                {/* <Disqus.CommentEmbed \n                    commentId={disqusConfig.identifier}\n                    showMedia={true}\n                    height={160}\n                /> */}\n                {process.env.NODE_ENV === 'production' && (\n                    <Disqus.DiscussionEmbed\n                        shortname={disqusShortname}\n                        config={disqusConfig}\n                    />\n                )}\n                <footer className={styles.footer}>\n                    <h3 className={styles.title}>\n                        <Link href={blogRoot}>{siteMetadata.title}</Link>\n                    </h3>\n                    <Bio className={styles.bio} />\n                    <section className={styles.links}>\n                        {data.previousDetails && (\n                            <div style={{marginBottom: '14px'}}>\n                                <Link\n                                    className={styles.previous}\n                                    href={data.previousDetails.href}\n                                >\n                                    ← {data.previousDetails.title}\n                                </Link>\n                            </div>\n                        )}\n                        {data.nextDetails && (\n                            <div style={{marginBottom: '14px'}}>\n                                <Link\n                                    className={styles.next}\n                                    href={data.nextDetails.href}\n                                >\n                                    {data.nextDetails.title} →\n                                </Link>\n                            </div>\n                        )}\n                    </section>\n                </footer>\n            </article>\n        </>\n    );\n}\n\nexport default BlogPostLayout;\n","import importAll from 'import-all.macro';\nimport * as Navi from 'navi';\nimport {join} from 'path';\nimport {sortBy} from 'lodash';\nimport slugify from 'slugify';\n\ninterface Context {\n    blogRoot: string;\n}\n\n// Get a list of all posts, that will not be loaded until the user\n// requests them.\nconst postModules = importAll.deferred('./**/post.ts?(x)');\nconst importPost = pathname => postModules[pathname]();\nconst postPathnames = Object.keys(postModules);\nconst datePattern = /^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[/-]/;\n\nlet postDetails = postPathnames.map(pathname => {\n    let slug = slugify(\n        pathname.replace(/post.tsx?$/, '').replace(/\\//g, '-')\n    ).replace(/^[-.]+|[.-]+$/g, '');\n\n    let date;\n    let dateMatch = slug.match(datePattern);\n    if (dateMatch) {\n        date = new Date(\n            parseInt(dateMatch[2], 10),\n            parseInt(dateMatch[3], 10) - 1,\n            parseInt(dateMatch[4], 10)\n        );\n    }\n\n    return {\n        slug,\n        pathname,\n        date\n    };\n});\n\n// Sort the pages by slug (which contain the dates)\npostDetails = sortBy(postDetails, ['slug']).reverse();\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\n// that can be used to load and return the post's Page object.\nlet posts = postDetails.map(({slug, pathname, date}, i) => ({\n    getPage: Navi.map(async () => {\n        let {default: post} = await importPost(pathname);\n        let {title, getContent, ...meta} = post;\n        let previousSlug, previousPost, nextSlug, nextPost;\n\n        if (i !== 0) {\n            let previousPostDetails = postDetails[i - 1];\n            previousPost = (await importPost(previousPostDetails.pathname))\n                .default;\n            previousSlug = previousPostDetails.slug;\n        }\n\n        if (i + 1 < postDetails.length) {\n            let nextPostDetails = postDetails[i + 1];\n            nextPost = (await importPost(nextPostDetails.pathname)).default;\n            nextSlug = nextPostDetails.slug;\n        }\n\n        return Navi.route({\n            title,\n            getData: (req, context: Context) => ({\n                date,\n                pathname,\n                slug,\n                previousDetails: previousPost && {\n                    title: previousPost.title,\n                    href: join(context.blogRoot, 'posts', previousSlug)\n                },\n                nextDetails: nextPost && {\n                    title: nextPost.title,\n                    href: join(context.blogRoot, 'posts', nextSlug)\n                },\n                ...meta\n            }),\n            getView: async () => {\n                let {default: MDXComponent, ...other} = await getContent();\n                return {MDXComponent, ...other};\n            }\n        });\n    }),\n    slug\n}));\n\nexport default posts;\n","import { compose, lazy, map, mount, redirect, resolve, route, withContext, withView, Route } from 'navi'\nimport React from 'react'\nimport { join } from 'path'\nimport { chunk, fromPairs } from 'lodash'\nimport BlogIndexPage from '../components/BlogIndexPage'\nimport BlogLayout from '../components/BlogLayout'\nimport BlogPostLayout from '../components/BlogPostLayout'\nimport siteMetadata from '../siteMetadata'\nimport posts from './posts'\n\ninterface AppNavContext {\n  blogRoot: string\n}\n\n// Split the posts into a list of chunks of the given size, and\n// then build index pages for each chunk.\nlet chunks = chunk(posts, siteMetadata.indexPageSize)\nlet chunkPagePairs = chunks.map((chunk, i) => [\n  '/' + (i + 1),\n  map<AppNavContext>(async (req, context) => {\n    // Don't load anything when just crawling\n    if (req.method === 'HEAD') {\n      return route()\n    }\n\n    // Get metadata for all pages on this page\n    let postRoutes = await Promise.all<Route>(\n      chunk.map(async post => {\n        let href = join(context.blogRoot, 'posts', post.slug)\n        return await resolve({\n          // If you want to show the page content on the index page, set\n          // this to 'GET' to be able to access it.\n          method: 'HEAD',\n          routes,\n          url: href,\n        })\n      }),\n    )\n\n    // Only add a page number to the page title after the first index page.\n    let pageTitle = siteMetadata.title\n    if (i > 0) {\n      pageTitle += ` – page ${i + 1}`\n    }\n\n    return route({\n      title: pageTitle,\n      getView: () => (\n        <BlogIndexPage\n          blogRoot={context.blogRoot}\n          pageNumber={i + 1}\n          pageCount={chunks.length}\n          postRoutes={postRoutes}\n        />\n      ),\n    })\n  }),\n])\n\nconst routes = compose(\n  withContext((req, context): AppNavContext => ({\n    // By adding the point at which the blog was mounted to context, it\n    // makes it possible to easily scope all URLs to the blog root, thus\n    // making it possible to mount the entire route on a subdirectory.\n    blogRoot: req.mountpath || '/',\n    ...context,\n  })),\n  withView((req, context) => {\n    // Check if the current page is an index page by comparing the remaining\n    // portion of the URL's pathname with the index page paths.\n    let isViewingIndex = req.path === '/' || /^\\/page\\/\\d+\\/$/.test(req.path)\n\n    // Wrap the current page's content with a React Context to pass global\n    // configuration to the blog's components.\n    return (\n      <BlogLayout\n        blogRoot={context.blogRoot}\n        isViewingIndex={isViewingIndex}\n      />\n    )\n  }),\n  mount({\n    // The blog's index pages go here. The first index page is mapped to the\n    // root URL, with a redirect from \"/page/1\". Subsequent index pages are\n    // mapped to \"/page/n\".\n    '/': chunkPagePairs.shift()[1],\n    '/page': mount({\n      '/1': redirect((req, context: AppNavContext) => context.blogRoot),\n      ...fromPairs(chunkPagePairs),\n    }),\n\n    // Put posts under \"/posts\", so that they can be wrapped with a\n    // \"<BlogPostLayout />\" that configures MDX and adds a post-specific layout.\n    '/posts': compose(\n      withView((req, context: AppNavContext) => <BlogPostLayout blogRoot={context.blogRoot} />),\n      mount(fromPairs(posts.map(post => ['/' + post.slug, post.getPage]))),\n    ),\n\n    // Miscellaneous pages can be added directly to the root switch.\n    '/tags': lazy(() => import('./tags')),\n    '/about': lazy(() => import('./about')),\n\n    // Only the statically built copy of the RSS feed is intended to be opened,\n    // but the route is defined here so that the static renderer will pick it\n    // up.\n    '/rss': route(),\n  }),\n)\n\nexport default routes\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__3KSl0\",\"active\":\"LoadingIndicator_active__3EncM\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__2icwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BlogLayout_container__1fiRb\",\"title\":\"BlogLayout_title__3HyDU\"};","import { Route } from 'navi'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport ArticleMeta from './ArticleMeta'\nimport styles from './ArticleSummary.module.css'\n\ninterface ArticleSummaryProps {\n    blogRoot: string;\n    route: Route;\n}\n\nfunction ArticleSummary({blogRoot, route}: ArticleSummaryProps) {\n    return (\n        <article className={styles.ArticleSummary}>\n            <h2>\n                <Link style={{boxShadow: 'none'}} href={route.url.href}>\n                    {route.title}\n                </Link>\n            </h2>\n            <ArticleMeta blogRoot={blogRoot} data={route.data} />\n            <p>{route.data.spoiler}</p>\n        </article>\n    );\n}\n\nexport default ArticleSummary;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleSummary\":\"ArticleSummary_ArticleSummary__3I5Qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"Bio_Bio__1ks_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockquote\":\"ArticleToc_blockquote__2xzi1\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/**\n * @file [BaiduWrap]\n * @author [mzvast]\n * @email [mzvast@gmail.com]\n * @create date 2020-09-05 21:58:50\n */\n/* eslint-disable max-len,babel/new-cap,operator-linebreak,fecs-export-on-declare,space-before-function-paren */\n// import React, {PureComponent} from 'react';\n\nfunction insertScript(src: string) {\n    var hm = document.createElement('script');\n    hm.src = src;\n    var s = document.getElementsByTagName('script')[0];\n    // @ts-ignore\n    s.parentNode.insertBefore(hm, s);\n}\n\nfunction addBaidu() {\n    window['_hmt'] = window['_hmt'] || [];\n    insertScript('https://hm.baidu.com/hm.js?edf54a88a7b7ef99363b4a726e7b2dc6');\n}\nfunction addGoogle() {\n    // @ts-ignore\n    window.dataLayer = window.dataLayer || [];\n    function gtag() {\n        // @ts-ignore\n        window.dataLayer.push(arguments);\n    }\n    // @ts-ignore\n    gtag('js', new Date());\n    // @ts-ignore\n    gtag('config', 'UA-87665383-1');\n    insertScript('https://www.googletagmanager.com/gtag/js?id=UA-87665383-1');\n}\n\nconst AnalyticsWrap = (props) => {\n    const shouldLoad = process.env.NODE_ENV === 'production';\n    shouldLoad &&\n        addBaidu() &&\n        addGoogle() &&\n        console.log('render::AnalyticsWrap');\n    return props.children;\n};\nexport default AnalyticsWrap;\n","import register from 'navi-scripts/register'\nimport { createBrowserNavigation } from 'navi'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-navi'\nimport HelmetProvider from 'react-navi-helmet-async'\nimport './index.module.css'\nimport routes from './routes'\nimport * as serviceWorker from './serviceWorker'\nimport ThemeService from './service/ThemeService'\nimport AnalyticsWrap from './AnalyticsWrap'\n\n// `register()` is responsible for exporting your app's pages and App\n// component to the static renderer, and for starting the app with the\n// `main()` function when running within a browser.\nregister({\n  // Specify the pages that navi-app should statically build, by passing in a\n  // Switch object.\n  routes,\n\n  // This will only be called when loading your app in the browser. It won't\n  // be called when performing static generation.\n  async main() {\n    ThemeService.syncTheme();\n    let navigation = createBrowserNavigation({ routes })\n\n    // Wait until the navigation has loaded the page's content, or failed to do\n    // so. If you want to load other data in parallel while the initial page is\n    // loading, make sure to start loading before this line.\n    await navigation.getRoute()\n\n    // React requires that you call `ReactDOM.hydrate` if there is statically\n    // rendered content in the root element, but prefers us to call\n    // `ReactDOM.render` when it is empty.\n    let hasStaticContent = process.env.NODE_ENV === 'production'\n    let renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render\n\n    // Start react, passing in the current navigation state and\n    // rendering the top-level view.\n    renderer(\n      <HelmetProvider>\n        <AnalyticsWrap>\n          <Router hashScrollBehavior='smooth' navigation={navigation} />\n        </AnalyticsWrap>\n      </HelmetProvider>,\n      document.getElementById(\"root\")\n    )\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister()\n  },\n})\n"],"sourceRoot":""}